# File: docker-compose.yml
version: '3.8'

services:
  # Main CoP Pipeline Application
  cop-pipeline:
    build: .
    container_name: cop-pipeline
    env_file:
      - .env
    ports:
      - "9090:9090"  # Prometheus metrics
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./principles:/app/principles
    networks:
      - cop-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cop-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cop-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cop-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cop-network
    restart: unless-stopped

  # Prometheus (optional - for metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: cop-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - cop-network
    restart: unless-stopped

  # Grafana (optional - for visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: cop-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - cop-network
    restart: unless-stopped

networks:
  cop-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: